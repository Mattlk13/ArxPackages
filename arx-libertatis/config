#!/bin/bash

################################################################################
# Project configuration

project_name='Arx Libertatis'

# Git repository URL for the project source code
git_repository='git://github.com/arx/ArxLibertatis.git'

# URL for the project website
project_url='http://arx-libertatis.org/'

# Project description as in "$project_name, ..." (OPTIONAL)
project_tagline='a cross-platform, open source port of [Arx Fatalis](http://www.arkane-studios.com/uk/arx.php)'

# URL for alternate downloads (OPTIONAL)
project_downloads_url='http://wiki.arx-libertatis.org/Download'

# URL for the full changelog (OPTIONAL)
project_changelog_url='http://wiki.arx-libertatis.org/Changelog'

# GPG key id to sign builds with - empty key disables signing
sign_key='F87D7DF750859A5E' # release@arx-libertatis.org

################################################################################
# Build configuration

# Arx is not a small project, use better source compression
archives['source-build']='.tar.xz'

# Additional options to pass to CMake
cmake_options+=(
	-DUNITY_BUILD=1
	-DUSE_STATIC_LIBS=1
	-DBUILD_CRASHREPORTER=0 # it's a bit wasteful to include Qt just for the crash reporter
	-DSCRIPTDIR='bin'
	-DAPPDIR='.'
	-DICONDIR='.'
	-DINSTALL_DATADIR='data'
	-DWITH_SDL=2
	-DRUNTIME_LIBEXECDIR=''
)

inherit_projects+=( 'innoextract' )

################################################################################
# Wrapper configuration

# Set ${command}_COMMAND to the string used to invoke the wrapper script
wrapper_use_command=1

# Set arx_PATH to Add the package root as a potential data directory
wrapper_use_cmd_path=1

# What to set ${command}_PATH to ($here is the directory containing the wrapper script)
wrapper_cmd_path='$here/data'

copy_files+=(
	
	# Include the arx-portable wrapper
	[':arx-portable']='/'
	
	# Create a data subdirectory (with a README)
	[':data/README.md']='data/'
	
)

################################################################################
# Adjust documentation

readme_transforms+=(
	--append-file '* data * locations *' "$filesdir/README.data.md"
)

################################################################################
# Sanity checks

# List of binaries that must be present in binary packages
required_binaries+=(
	arx
	arxunpak
	arxsavetool
	arx-install-data
)

# Libraries that should not be linked
forbidden_libraries+=(
	
	# C++ stdlib - link statically
	'libstdc++.so*'
	'libstdc++-*.dll'
	'libc++.so*'
	
	# We link Boost, GLEW, FreeType and ZLIB statically - check for that
	'libboost_*'
	'libGLEW*'
	'glew*'
	'libfreetype*'
	'freetype*'
	'libz.so*'
	'zlib*'
	
)

test_binaries() {
	
	# Test that the program runs at all
	expect_success arx --help
	expect_success arx --list-dirs
	
	# Exit code 1 if no files given
	expect_failure arxunpak
	expect_failure arxsavetool
	
	true
}
