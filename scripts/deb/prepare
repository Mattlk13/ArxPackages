#!/bin/bash

. "${BASH_SOURCE[0]%/*}/../common"
. "${BASH_SOURCE[0]%/*}/common"

get_output _source _sourcedir "$version" 'source'

e cp "$_source" "${project}_${_deb_version}.orig.tar.${_source##*.}"

e extract "$_source"

_gpg_command="${PWD}/gpg-wrapper"
echo "#!/bin/bash
gpg --local-user 0x${launchpad_key} --no-tty \"\$@\"" \
	> "$_gpg_command"
chmod +x "$_gpg_command"

get_output _output

pushd "$_sourcedir"
	
	e rsync -a "${pkgsrcdir}/" 'debian'
	
	[ $is_snapshot = 0 ] || add_snapshot_deb_changelog_entry 'debian/changelog' 'stable'
	
	if [ ! -f "${_output}/${project}.dsc" ] ; then
		
		echo "  ${white}:: building source package for debian${reset}" >&2
		
		e dpkg-buildpackage -S -us -uc -d -p"$_gpg_command" 2>&1
		e require_file *-0.1.dsc
		e require_file *-0.1_source.changes
		e require_file *-0.1.debian.tar.*
		
	fi
	
	for ubuntu_ver in "${ubuntu_versions_src[@]}" ; do
		
		_build=1
		while [ "$ubuntu_ver" = "$rebuild" ] && [ -f "${_output}/"*-0ppa${_build}~${ubuntu_ver}*.dsc ] ; do
			((++_build))
		done
		
		if [ ! -f "${_output}/"*-0ppa${_build}~${ubuntu_ver}*.dsc ] ; then
			
			echo "  ${white}:: building source package for ubuntu ${ubuntu_ver}${reset}" >&2
			
			# Change the Debian version to an Ubuntu ppa version
			e cp "$pkgsrcdir/changelog" 'debian/changelog'
			
			if [ $is_snapshot = 0 ] ; then
				
				e sed -i "s/^\\([^ ]*\\) (\\([^\\-]*\\)-\\([0-9]*\\)\\.\\([0-9]*\\)) \\([^;]*\\);/\\1 (\\2-\\3ppa\\4~${ubuntu_ver}) ${ubuntu_ver};/" 'debian/changelog'
				
			else
				
				add_snapshot_deb_changelog_entry 'debian/changelog' "$ubuntu_ver"
				
			fi
			
			if [ $_build -gt 1 ] ; then
				_tmpfile="${PWD}/changelog.temp"
				echo "${project} (${_deb_version}-0ppa${_build}~${ubuntu_ver}) ${ubuntu_ver}; urgency=low

  * Rebuild only

 -- ${packager}  $(date --rfc-2822)
" > "$_tmpfile"
				cat "debian/changelog" >> "$_tmpfile"
				e mv "$_tmpfile" "debian/changelog"
			fi
			
			e dpkg-buildpackage -S -d -p"$_gpg_command" 2>&1
			e require_file *-0ppa${_build}~${ubuntu_ver}*.dsc
			e require_file *-0ppa${_build}~${ubuntu_ver}_source.changes
			e require_file *-0ppa${_build}~${ubuntu_ver}.debian.tar.*
			
		fi
		
	done
	
popd

if [ ! -f "${_output}/${project}.dsc" ] ; then
	e cp "${project}_${_deb_release}.dsc" "${project}.dsc"
fi

# Preserve the output files
[ -d "$_output" ] || e mkdir "$_output"
e find -mindepth 1 -maxdepth 1 -type f ! -name gpg-wrapper -exec mv -n {} "$_output/" \;
